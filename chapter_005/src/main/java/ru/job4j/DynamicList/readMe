Необходимо создать контейнер с методами
add(E value);
E get(int index);
и реализовать для него Iterable<E>.
Внутри контейнера должен быть массив Object[] container;

Контейнер должен быть динамический. То есть метод add(E value) - может принимать бесконечное количество элементов.
Object[] container - по нему сделать итерацию.

Внутри контейнера нельзя использовать структуры данных из JDK - ArrayList. LinkedList и другие.

ошибки в коде:
1) в методе add при достижении границы массива, он не увеличивается. Arrays.copyOf(container, size++) -
второй параметр этого метода указывает новую длину, а вы ее не увеличиваете в итоге массив не растет и
не добавляет новые элементы.
2) метод get должен возвращать элемент по индексу равному переданному параметру. В текущей реализации он пытается
возвратить элемент по индексу равному size, но т.к. size больше чем индекс последнего добавленного элемента на 1,
то возвращает null, а если при достижении границ массива будет сгенерировано ArrayIndexOutOfBoundsException.
3) метод hasNext работает не верно, он возвращает всегда false. Потому что вы ограничивает итерации массива значением count,
которое у вас равно 0. В итоге всегда возвращается false, а надо сравнивать с количеством добавленных элементов.
4) в методе hasNext не надо писать условие
    else if (count > size) {
        isPresent = false;
    }
переменная isPresent и так у вас false.
5) в методе нет смысла использовать цикл while, надо использовать if.
6) так же в этом методе надо возвращать последовательно элементы начиная с самого начала, в текущей реализации он
пытается вернуть элемент хранимый по индексу size, а это у вас null.

    /*
     * код не верный:
     * 1) где инициализация поля container?
     * 2) почему в методе add нет проверки выхода за границы массива и обработки этой ситуации?
     * 3) в методе get не проверяется индекс
     * 4) реализация итератора не верна, почему вы массив приводит к типу Iterator?
     * тебе надо если размер закончился, то надо пересоздать массив с большой длинной.
     */


1) в методе hasNext тебе не нужен цикл. Итератор же возвращает все значения подряд, поэтому просто напиши если
count < size вернуть true.2) перенеси переменную count внутрь класса ArrayIterator, она нужна же тебе только внутри
этого класса. Старайся делать область видимость переменной максимально узкой, достаточной для выполнения функций и всё.
Так ты избежишь конфликтов имен и сокрытия имен переменных. 3) при объявлении класса DynamicList указывай не просто
Iterable, а Iterable<E>. Коллекция же параметризована, это даст тебе возможность использовать ее в foreach циклах.
