На базе вашей структуры усовершенствовать код.
Создайте BST - binary search tree (двоичное дерево поиска).
1) добавьте метод add(E e);

Помните
1. Корень имеет только два дочерних элемента: left и right. Каждый из этих узлов в свою очередь, может быть
корнем для своих левых и правых поддеревьев.
2. Элемент слева от корня, меньше либо равен корню, а правый больше корня.
3. Добавление элемента постарайтесь реализовать рекурсивно.

для простоты можно не хранить пару ключ-значение. А хранить только значение, которое самое и будет выступать в качестве ключа.
Но раз ты выбрал такой вариант, то используй для ключа и значения разные типы <K, V>.

Двоичное дерево поиска сравнивает хранимое в вершине (узле) значение с переданным. Например при поиске элемента ты сравниваешь значение
которое ищешь с каждой вершиной, начиная с корня. Если переданный элемент меньше, чем вершина (compareTo вернул меньше 0), то значит он
должен хранится слева от вершины (в левом поддереве), если больше 0, то должен храниться в правом поддереве. Если же результат compareTo
равен 0, то нужная вершина найдена.

При совпадении значений ты пишешь node.value = value - это не верно, потому что посмотри внимательно, что такое поле node.
Это просто поле дерева, оно не имеет никакого отношения к найденной вершине.
А тебе надо присваивать переданное значение найденной вершине.

когда ты добавляешь в дерево новое значение, то соответственно добавляешь новый ключ и ассоциированное
с ним значение. А когда ищешь, то передаешь соответственно ключ и сравниваешь по ключам.

Если ты сгенерируешь псевдослучайное число для какого-то значения в качестве ключа. То как потом ты узнаешь какое значение (ключ)
было сопоставлено конкретному элементу и как ты потом будешь его искать? Когда будет создаваться конкретный экземпляр дерева,
то пользователь укажет какой тип он хочет использовать в качестве ключа, а какой в качестве значения. Сейчас для простоты просто
используй один и тот же тип и для ключа и для значения. И соответственно при добавлении используй элемент и как ключ и как значение.
Иначе ты сейчас запутаешься.